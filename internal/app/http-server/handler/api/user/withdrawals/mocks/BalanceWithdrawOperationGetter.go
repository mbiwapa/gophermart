// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/mbiwapa/gophermart.git/internal/domain/entity"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// BalanceWithdrawOperationGetter is an autogenerated mock type for the BalanceWithdrawOperationGetter type
type BalanceWithdrawOperationGetter struct {
	mock.Mock
}

// GetWithdrawOperations provides a mock function with given fields: ctx, userUUID
func (_m *BalanceWithdrawOperationGetter) GetWithdrawOperations(ctx context.Context, userUUID uuid.UUID) ([]entity.BalanceOperation, error) {
	ret := _m.Called(ctx, userUUID)

	var r0 []entity.BalanceOperation
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) ([]entity.BalanceOperation, error)); ok {
		return rf(ctx, userUUID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) []entity.BalanceOperation); ok {
		r0 = rf(ctx, userUUID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.BalanceOperation)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, userUUID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBalanceWithdrawOperationGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewBalanceWithdrawOperationGetter creates a new instance of BalanceWithdrawOperationGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBalanceWithdrawOperationGetter(t mockConstructorTestingTNewBalanceWithdrawOperationGetter) *BalanceWithdrawOperationGetter {
	mock := &BalanceWithdrawOperationGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
