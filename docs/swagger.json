{
    "swagger": "2.0",
    "info": {
        "description": "This is a Gophermart server.",
        "title": "Gophermart API",
        "contact": {
            "name": "v.max",
            "url": "http://v.max.example",
            "email": "support@example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/api/user/orders": {
            "get": {
                "description": "Эндпоинт для получение списка загруженных номеров заказов и информации по ним\nВ заголовке Authorization необходимо передавать JWT токен.\nНомера заказа в выдаче должны быть отсортированы по времени загрузки от самых старых к самым новым. Формат даты — RFC3339.\nДоступные статусы обработки расчётов:\nNEW — заказ загружен в систему, но не попал в обработку;\nPROCESSING — вознаграждение за заказ рассчитывается;\nINVALID — система расчёта вознаграждений отказала в расчёте;\nPROCESSED — данные по заказу проверены и информация о расчёте успешно",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Получение списка загруженных заказов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/orders.Response"
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "User is not authorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "description": "Эндпоинт используется для добавления нового заказа для начисления средств.\nВ заголовке Authorization необходимо передавать JWT токен.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Добавление нового заказа для начисления средств",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "example": 123124551,
                        "description": "Order Number",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order already added from current user"
                    },
                    "202": {
                        "description": "Order successfully added to process"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "User is not authorized"
                    },
                    "409": {
                        "description": "Order already added from another user"
                    },
                    "422": {
                        "description": "Order number is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/withdrawals": {
            "get": {
                "description": "Эндпоинт используется для получения списка операций снятия баланса пользователя\nВ заголовке Authorization необходимо передавать JWT токен.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Получение списка операций снятия баланса.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User balance successfully returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/withdrawals.Response"
                            }
                        }
                    },
                    "204": {
                        "description": "No withdrawal operations found"
                    },
                    "401": {
                        "description": "User is not authorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user/balance": {
            "get": {
                "description": "Эндпоинт используется для получения текущего балaнаса пользователя.\nВ заголовке Authorization необходимо передавать JWT токен.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Получение баланса пользователя.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User balance successfully returned",
                        "schema": {
                            "$ref": "#/definitions/balance.Response"
                        }
                    },
                    "401": {
                        "description": "User is not authorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user/balance/withdraw": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Эндпоинт используется для снятия средств с баланса пользователя в пользу заказа\nВ заголовке Authorization необходимо передавать JWT токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Cнятие средств с баланса пользователя в пользу заказа",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Withdraw Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/withdraw.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Withdrawal request successfully sent"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "User is not authorized"
                    },
                    "402": {
                        "description": "Balance is insufficient"
                    },
                    "422": {
                        "description": "Order number is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Эндпоинт используется для аутентификации пользователя.\nЛогин приводится к нижнему регистру на стороне сервера\nВ заголовке Authorization возвращается JWT токен для авторизации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Аутентификация пользователя.",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully authenticated",
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "JWT Token"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Login or password is wrong"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Эндпоинт используется для регистрации нового пользователя.\nЛогин приводится к нижнему регистру на стороне сервера\nВ заголовке Authorization возвращается JWT токен авторизации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Регистрация нового пользователя.",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/register.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "JWT Token"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "balance.Response": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number",
                    "example": 500.5
                },
                "withdrawn": {
                    "type": "number",
                    "example": 42
                }
            }
        },
        "login.Request": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "test_Password"
                }
            }
        },
        "orders.Response": {
            "type": "object",
            "properties": {
                "accrual": {
                    "type": "number",
                    "example": 500
                },
                "number": {
                    "type": "string",
                    "example": "123124551"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "NEW",
                        "PROCESSING",
                        "INVALID",
                        "PROCESSED"
                    ],
                    "example": "PROCESSING"
                },
                "uploaded_at": {
                    "type": "string",
                    "example": "2020-12-10T15:15:45+03:00"
                }
            }
        },
        "register.Request": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "test_Password"
                }
            }
        },
        "withdraw.Request": {
            "type": "object",
            "required": [
                "order",
                "sum"
            ],
            "properties": {
                "order": {
                    "type": "string",
                    "example": "12312455"
                },
                "sum": {
                    "type": "number",
                    "example": 100
                }
            }
        },
        "withdrawals.Response": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "example": "12312455"
                },
                "processed_at": {
                    "type": "string",
                    "example": "2020-12-10T15:15:45+03:00"
                },
                "sum": {
                    "type": "number",
                    "example": 100
                }
            }
        }
    }
}